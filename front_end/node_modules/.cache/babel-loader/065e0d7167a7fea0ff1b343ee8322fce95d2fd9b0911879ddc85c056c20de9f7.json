{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\popariana\\\\WebstormProjects\\\\front_end\\\\src\\\\components\\\\DeviceInsert.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeviceInsert = () => {\n  _s();\n  const [description, setDescription] = useState('');\n  const [address, setAddress] = useState('');\n  const [mhec, setMhec] = useState('');\n  const [userId, setUserId] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const device = {\n        description: description,\n        address: address,\n        mhec: mhec,\n        userId: userId // Ensure userId is included\n      };\n      const response = await axios.post('http://localhost:8081/devices/insert', device);\n      alert(`Device created with ID: ${response.data}`);\n    } catch (error) {\n      console.error('Error inserting device:', error);\n      alert('Error inserting device');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Description:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Address:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: address,\n      onChange: e => setAddress(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Max Hourly Energy Consumption:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: mhec,\n      onChange: e => setMhec(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"User ID:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: userId,\n      onChange: e => setUserId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Insert Device\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(DeviceInsert, \"AFippVswBpQu9mQGOfg56wY95kM=\");\n_c = DeviceInsert;\nexport default DeviceInsert;\nvar _c;\n$RefreshReg$(_c, \"DeviceInsert\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","DeviceInsert","_s","description","setDescription","address","setAddress","mhec","setMhec","userId","setUserId","handleSubmit","e","preventDefault","device","response","post","alert","data","error","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/popariana/WebstormProjects/front_end/src/components/DeviceInsert.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DeviceInsert = () => {\r\n    const [description, setDescription] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [mhec, setMhec] = useState('');\r\n    const [userId, setUserId] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const device = {\r\n                description: description,\r\n                address: address,\r\n                mhec: mhec,\r\n                userId: userId,  // Ensure userId is included\r\n            };\r\n\r\n            const response = await axios.post('http://localhost:8081/devices/insert', device);\r\n            alert(`Device created with ID: ${response.data}`);\r\n        } catch (error) {\r\n            console.error('Error inserting device:', error);\r\n            alert('Error inserting device');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <label>Description:</label>\r\n            <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n\r\n            <label>Address:</label>\r\n            <input type=\"text\" value={address} onChange={(e) => setAddress(e.target.value)} />\r\n\r\n            <label>Max Hourly Energy Consumption:</label>\r\n            <input type=\"number\" value={mhec} onChange={(e) => setMhec(e.target.value)} />\r\n\r\n            <label>User ID:</label>\r\n            <input type=\"text\" value={userId} onChange={(e) => setUserId(e.target.value)} />\r\n\r\n            <button type=\"submit\">Insert Device</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default DeviceInsert;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}