{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\popariana\\\\WebstormProjects\\\\front_end\\\\src\\\\login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setUser\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(''); // State to hold error messages\n  const [loading, setLoading] = useState(false); // State to handle loading status\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    setError(''); // Reset error state on new login attempt\n    setLoading(true); // Set loading to true\n\n    try {\n      const response = await axios.post('http://localhost:8080/users/login', {\n        email,\n        password\n      });\n      const {\n        id,\n        role\n      } = response.data; // Ensure role is returned in the response\n      setUser({\n        userId: id,\n        role\n      }); // Update user state with userId and role\n\n      // Redirect based on role\n      if (role === 'ADMIN') {\n        navigate('/admin');\n      } else if (role === 'CLIENT') {\n        navigate('/client');\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n      setError('Invalid credentials'); // Update error state\n    } finally {\n      setLoading(false); // Set loading to false after request completion\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Email\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      children: loading ? 'Logging in...' : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"6HSgh3QiCvfUxk6eI7OKYEV0xmQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Login","setUser","_s","email","setEmail","password","setPassword","error","setError","loading","setLoading","navigate","handleLogin","e","preventDefault","response","post","id","role","data","userId","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","required","disabled","style","color","_c","$RefreshReg$"],"sources":["C:/Users/popariana/WebstormProjects/front_end/src/login/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = ({ setUser }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');  // State to hold error messages\r\n    const [loading, setLoading] = useState(false);  // State to handle loading status\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        setError(''); // Reset error state on new login attempt\r\n        setLoading(true);  // Set loading to true\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:8080/users/login', { email, password });\r\n            const { id, role } = response.data;  // Ensure role is returned in the response\r\n            setUser({ userId: id, role });  // Update user state with userId and role\r\n\r\n            // Redirect based on role\r\n            if (role === 'ADMIN') {\r\n                navigate('/admin');\r\n            } else if (role === 'CLIENT') {\r\n                navigate('/client');\r\n            }\r\n        } catch (error) {\r\n            console.error('Login failed:', error);\r\n            setError('Invalid credentials');  // Update error state\r\n        } finally {\r\n            setLoading(false);  // Set loading to false after request completion\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleLogin}>\r\n            <h2>Login</h2>\r\n            <input\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                placeholder=\"Email\"\r\n                required\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                placeholder=\"Password\"\r\n                required\r\n            />\r\n            <button type=\"submit\" disabled={loading}>\r\n                {loading ? 'Logging in...' : 'Login'}\r\n            </button>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EACzC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAE;EAChD,MAAMgB,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9B,MAAMe,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACdE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAE;;IAEnB,IAAI;MACA,MAAMK,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,mCAAmC,EAAE;QAAEb,KAAK;QAAEE;MAAS,CAAC,CAAC;MAC3F,MAAM;QAAEY,EAAE;QAAEC;MAAK,CAAC,GAAGH,QAAQ,CAACI,IAAI,CAAC,CAAE;MACrClB,OAAO,CAAC;QAAEmB,MAAM,EAAEH,EAAE;QAAEC;MAAK,CAAC,CAAC,CAAC,CAAE;;MAEhC;MACA,IAAIA,IAAI,KAAK,OAAO,EAAE;QAClBP,QAAQ,CAAC,QAAQ,CAAC;MACtB,CAAC,MAAM,IAAIO,IAAI,KAAK,QAAQ,EAAE;QAC1BP,QAAQ,CAAC,SAAS,CAAC;MACvB;IACJ,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACZc,OAAO,CAACd,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrCC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,CAAE;IACtC,CAAC,SAAS;MACNE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;IACxB;EACJ,CAAC;EAED,oBACIX,OAAA;IAAMuB,QAAQ,EAAEV,WAAY;IAAAW,QAAA,gBACxBxB,OAAA;MAAAwB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACd5B,OAAA;MACI6B,IAAI,EAAC,OAAO;MACZC,KAAK,EAAE1B,KAAM;MACb2B,QAAQ,EAAGjB,CAAC,IAAKT,QAAQ,CAACS,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;MAC1CG,WAAW,EAAC,OAAO;MACnBC,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACF5B,OAAA;MACI6B,IAAI,EAAC,UAAU;MACfC,KAAK,EAAExB,QAAS;MAChByB,QAAQ,EAAGjB,CAAC,IAAKP,WAAW,CAACO,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;MAC7CG,WAAW,EAAC,UAAU;MACtBC,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACF5B,OAAA;MAAQ6B,IAAI,EAAC,QAAQ;MAACM,QAAQ,EAAEzB,OAAQ;MAAAc,QAAA,EACnCd,OAAO,GAAG,eAAe,GAAG;IAAO;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,EACRpB,KAAK,iBAAIR,OAAA;MAAGoC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAb,QAAA,EAAEhB;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEf,CAAC;AAACzB,EAAA,CAtDIF,KAAK;EAAA,QAKUH,WAAW;AAAA;AAAAwC,EAAA,GAL1BrC,KAAK;AAwDX,eAAeA,KAAK;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}