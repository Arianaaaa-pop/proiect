{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\popariana\\\\WebstormProjects\\\\front_end\\\\src\\\\components\\\\DeviceList.js\",\n  _s = $RefreshSig$();\n// src/components/DeviceList.js\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeviceList = () => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchDevices = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:8081/devices/all');\n      if (!response.ok) {\n        throw new Error('Failed to fetch devices');\n      }\n      const data = await response.json();\n      setDevices(data); // Assuming your API returns an array of devices\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Device List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: fetchDevices,\n      children: \"Load Devices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading devices...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: devices.map(device => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: device.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), \" - Address: \", device.address, \", MHEC: \", device.mhec, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger ml-2\",\n          onClick: () => deleteDevice(device.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary ml-2\",\n          onClick: () => navigate(`/update-device/${device.id}`),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, device.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(DeviceList, \"i1gAEZV84GD5D4l0WrisQpRVYHE=\");\n_c = DeviceList;\nconst deleteDevice = async id => {\n  if (window.confirm('Are you sure you want to delete this device?')) {\n    try {\n      await axios.delete(`http://localhost:8081/devices/delete/${id}`);\n      alert('Device deleted successfully');\n      setDevices(devices.filter(device => device.id !== id)); // Update the UI after deleting\n    } catch (error) {\n      console.error('Error deleting device:', error);\n      alert('Failed to delete device');\n    }\n  }\n};\nexport default DeviceList;\nvar _c;\n$RefreshReg$(_c, \"DeviceList\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","DeviceList","_s","devices","setDevices","loading","setLoading","error","setError","fetchDevices","response","fetch","ok","Error","data","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","map","device","description","address","mhec","deleteDevice","id","navigate","_c","window","confirm","delete","alert","filter","console","$RefreshReg$"],"sources":["C:/Users/popariana/WebstormProjects/front_end/src/components/DeviceList.js"],"sourcesContent":["// src/components/DeviceList.js\r\nimport React, { useState } from 'react';\r\nimport axios from \"axios\";\r\n\r\nconst DeviceList = () => {\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchDevices = async () => {\r\n        setLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await fetch('http://localhost:8081/devices/all');\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch devices');\r\n            }\r\n            const data = await response.json();\r\n            setDevices(data); // Assuming your API returns an array of devices\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Device List</h2>\r\n            <button className=\"btn btn-primary\" onClick={fetchDevices}>Load Devices</button>\r\n            {loading && <div>Loading devices...</div>}\r\n            {error && <div>Error: {error}</div>}\r\n            <ul>\r\n                {devices.map(device => (\r\n                    <li key={device.id}>\r\n                        <strong>{device.description}</strong> - Address: {device.address}, MHEC: {device.mhec}\r\n                        <button\r\n                            className=\"btn btn-danger ml-2\"\r\n                            onClick={() => deleteDevice(device.id)}>Delete\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn-secondary ml-2\"\r\n                            onClick={() => navigate(`/update-device/${device.id}`)}>Update\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\nconst deleteDevice = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this device?')) {\r\n        try {\r\n            await axios.delete(`http://localhost:8081/devices/delete/${id}`);\r\n            alert('Device deleted successfully');\r\n            setDevices(devices.filter(device => device.id !== id)); // Update the UI after deleting\r\n        } catch (error) {\r\n            console.error('Error deleting device:', error);\r\n            alert('Failed to delete device');\r\n        }\r\n    }\r\n};\r\n\r\nexport default DeviceList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}