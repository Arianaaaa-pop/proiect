{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\popariana\\\\WebstormProjects\\\\front_end\\\\src\\\\device\\\\components\\\\DeviceList.js\",\n  _s = $RefreshSig$();\n// src/components/DeviceList.js\nimport React, { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport HomeButton from \"../HomeButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeviceList = () => {\n  _s();\n  const navigate = useNavigate();\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchDevices = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:8081/devices/all');\n      if (!response.ok) {\n        throw new Error('Failed to fetch devices');\n      }\n      const data = await response.json();\n      setDevices(data); // Assuming your API returns an array of devices\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HomeButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Device List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: fetchDevices,\n      children: \"Load Devices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading devices...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: devices.map(device => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: device.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), \" - Address: \", device.address, \", MHEC: \", device.mhec]\n      }, device.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(DeviceList, \"v5QfNSti6pHxV6o5Rs2Wm64t4Ts=\", false, function () {\n  return [useNavigate];\n});\n_c = DeviceList;\nexport default DeviceList;\nvar _c;\n$RefreshReg$(_c, \"DeviceList\");","map":{"version":3,"names":["React","useState","useNavigate","HomeButton","jsxDEV","_jsxDEV","DeviceList","_s","navigate","devices","setDevices","loading","setLoading","error","setError","fetchDevices","response","fetch","ok","Error","data","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","map","device","description","address","mhec","id","_c","$RefreshReg$"],"sources":["C:/Users/popariana/WebstormProjects/front_end/src/device/components/DeviceList.js"],"sourcesContent":["// src/components/DeviceList.js\r\nimport React, { useState } from 'react';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport HomeButton from \"../HomeButton\";\r\n\r\nconst DeviceList = () => {\r\n    const navigate = useNavigate();\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchDevices = async () => {\r\n        setLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await fetch('http://localhost:8081/devices/all');\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch devices');\r\n            }\r\n            const data = await response.json();\r\n            setDevices(data); // Assuming your API returns an array of devices\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <HomeButton />\r\n            <h2>Device List</h2>\r\n            <button className=\"btn btn-primary\" onClick={fetchDevices}>Load Devices</button>\r\n            {loading && <div>Loading devices...</div>}\r\n            {error && <div>Error: {error}</div>}\r\n            <ul>\r\n                {devices.map(device => (\r\n                    <li key={device.id}>\r\n                        <strong>{device.description}</strong> - Address: {device.address}, MHEC: {device.mhec}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeviceList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}