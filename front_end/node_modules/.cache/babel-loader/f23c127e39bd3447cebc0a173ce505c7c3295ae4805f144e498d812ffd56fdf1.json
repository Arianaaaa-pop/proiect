{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\popariana\\\\WebstormProjects\\\\front_end\\\\src\\\\user\\\\UserInsert.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport HomeButton from \"../device/HomeButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserInsert = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [role, setRole] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate role input\n    if (role !== 'CLIENT' && role !== 'ADMIN') {\n      alert('Role must be either CLIENT or ADMIN');\n      return;\n    }\n    try {\n      const user = {\n        name: name,\n        email: email,\n        password: password,\n        role: role // Ensure role is included\n      };\n      const response = await axios.post('http://localhost:8080/users/insert', user);\n      alert(`User created with ID: ${response.data}`); // Adjust this if your response is different\n    } catch (error) {\n      console.error('Error inserting user:', error);\n      alert('Error inserting user');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HomeButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true // Add required validation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true // Add required validation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true // Add required validation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Role:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: role,\n        onChange: e => setRole(e.target.value),\n        required: true // Add required validation\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"CLIENT\",\n          children: \"CLIENT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ADMIN\",\n          children: \"ADMIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Insert User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(UserInsert, \"26GEDv32KElNt/f2G2frz4PUdPQ=\");\n_c = UserInsert;\nexport default UserInsert;\nvar _c;\n$RefreshReg$(_c, \"UserInsert\");","map":{"version":3,"names":["React","useState","axios","HomeButton","jsxDEV","_jsxDEV","UserInsert","_s","name","setName","email","setEmail","password","setPassword","role","setRole","handleSubmit","e","preventDefault","alert","user","response","post","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/popariana/WebstormProjects/front_end/src/user/UserInsert.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport HomeButton from \"../device/HomeButton\";\r\n\r\nconst UserInsert = () => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [role, setRole] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Validate role input\r\n        if (role !== 'CLIENT' && role !== 'ADMIN') {\r\n            alert('Role must be either CLIENT or ADMIN');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const user = {\r\n                name: name,\r\n                email: email,\r\n                password: password,\r\n                role: role,  // Ensure role is included\r\n            };\r\n\r\n            const response = await axios.post('http://localhost:8080/users/insert', user);\r\n            alert(`User created with ID: ${response.data}`); // Adjust this if your response is different\r\n        } catch (error) {\r\n            console.error('Error inserting user:', error);\r\n            alert('Error inserting user');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <HomeButton />\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Name:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    required // Add required validation\r\n                />\r\n\r\n                <label>Email:</label>\r\n                <input\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required // Add required validation\r\n                />\r\n\r\n                <label>Password:</label>\r\n                <input\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required // Add required validation\r\n                />\r\n\r\n                <label>Role:</label>\r\n                <select\r\n                    value={role}\r\n                    onChange={(e) => setRole(e.target.value)}\r\n                    required // Add required validation\r\n                >\r\n                    <option value=\"\">Select a role</option>\r\n                    <option value=\"CLIENT\">CLIENT</option>\r\n                    <option value=\"ADMIN\">ADMIN</option>\r\n                </select>\r\n\r\n                <button type=\"submit\">Insert User</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserInsert;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMe,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,IAAIJ,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,OAAO,EAAE;MACvCK,KAAK,CAAC,qCAAqC,CAAC;MAC5C;IACJ;IAEA,IAAI;MACA,MAAMC,IAAI,GAAG;QACTZ,IAAI,EAAEA,IAAI;QACVE,KAAK,EAAEA,KAAK;QACZE,QAAQ,EAAEA,QAAQ;QAClBE,IAAI,EAAEA,IAAI,CAAG;MACjB,CAAC;MAED,MAAMO,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,oCAAoC,EAAEF,IAAI,CAAC;MAC7ED,KAAK,CAAC,yBAAyBE,QAAQ,CAACE,IAAI,EAAE,CAAC,CAAC,CAAC;IACrD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CL,KAAK,CAAC,sBAAsB,CAAC;IACjC;EACJ,CAAC;EAED,oBACId,OAAA;IAAAqB,QAAA,gBACIrB,OAAA,CAACF,UAAU;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACdzB,OAAA;MAAM0B,QAAQ,EAAEf,YAAa;MAAAU,QAAA,gBACzBrB,OAAA;QAAAqB,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpBzB,OAAA;QACI2B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEzB,IAAK;QACZ0B,QAAQ,EAAGjB,CAAC,IAAKR,OAAO,CAACQ,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;QACzCG,QAAQ,OAAC;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eAEFzB,OAAA;QAAAqB,QAAA,EAAO;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrBzB,OAAA;QACI2B,IAAI,EAAC,OAAO;QACZC,KAAK,EAAEvB,KAAM;QACbwB,QAAQ,EAAGjB,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;QAC1CG,QAAQ,OAAC;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eAEFzB,OAAA;QAAAqB,QAAA,EAAO;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxBzB,OAAA;QACI2B,IAAI,EAAC,UAAU;QACfC,KAAK,EAAErB,QAAS;QAChBsB,QAAQ,EAAGjB,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;QAC7CG,QAAQ,OAAC;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eAEFzB,OAAA;QAAAqB,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpBzB,OAAA;QACI4B,KAAK,EAAEnB,IAAK;QACZoB,QAAQ,EAAGjB,CAAC,IAAKF,OAAO,CAACE,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;QACzCG,QAAQ,OAAC;QAAA;QAAAV,QAAA,gBAETrB,OAAA;UAAQ4B,KAAK,EAAC,EAAE;UAAAP,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACvCzB,OAAA;UAAQ4B,KAAK,EAAC,QAAQ;UAAAP,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtCzB,OAAA;UAAQ4B,KAAK,EAAC,OAAO;UAAAP,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eAETzB,OAAA;QAAQ2B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACvB,EAAA,CA1EID,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AA4EhB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}